#!/bin/bash

# Script mejorado para configurar Entity Framework y la base de datos PostgreSQL

echo "üöÄ Iniciando configuraci√≥n de la API con PostgreSQL..."

# Agregar herramientas de .NET al PATH
export PATH="$PATH:/home/cater/.dotnet/tools"

# Verificar que estamos en el directorio correcto
if [ ! -f "Program.cs" ]; then
    echo "‚ùå Error: No se encontr√≥ Program.cs. Aseg√∫rate de estar en el directorio correcto."
    exit 1
fi

echo "üßπ Limpieza completa del proyecto..."
dotnet clean
rm -rf Migrations/
rm -rf bin/ obj/

echo "üì¶ Restaurando paquetes NuGet..."
dotnet restore

if [ $? -ne 0 ]; then
    echo "‚ùå Error al restaurar paquetes NuGet"
    exit 1
fi

echo "üî® Compilando proyecto..."
dotnet build -c Release

if [ $? -ne 0 ]; then
    echo "‚ùå Error al compilar el proyecto"
    exit 1
fi

echo "üîç Verificando conexi√≥n a PostgreSQL..."
# Probar conexi√≥n con psql (si est√° disponible)
if command -v psql &> /dev/null; then
    echo "Verificando conexi√≥n a la base de datos..."
    PGPASSWORD=Junior.28 psql -h localhost -U gestionacademica -d GestionAcademica -c "SELECT version();" 2>/dev/null
    if [ $? -eq 0 ]; then
        echo "‚úÖ Conexi√≥n a PostgreSQL exitosa"
    else
        echo "‚ö†Ô∏è No se pudo verificar la conexi√≥n a PostgreSQL, pero continuamos..."
    fi
else
    echo "‚ö†Ô∏è psql no disponible, saltando verificaci√≥n de conexi√≥n"
fi

echo "üìù Creando migraciones iniciales para PostgreSQL..."
dotnet ef migrations add InitialCreate

if [ $? -ne 0 ]; then
    echo "‚ùå Error al crear migraciones"
    exit 1
fi

echo "üóÉÔ∏è Aplicando migraciones a PostgreSQL..."
dotnet ef database update

if [ $? -ne 0 ]; then
    echo "‚ùå Error al aplicar migraciones"
    echo "Verifica que:"
    echo "1. PostgreSQL est√© ejecut√°ndose"
    echo "2. La base de datos 'GestionAcademica' exista"
    echo "3. El usuario 'gestionacademica' tenga permisos"
    echo "4. La cadena de conexi√≥n en appsettings.json sea correcta"
    exit 1
fi

echo "‚úÖ Configuraci√≥n de base de datos completada exitosamente!"

echo "üöÄ Iniciando aplicaci√≥n en modo Release..."
echo "La aplicaci√≥n estar√° disponible en: http://$(curl -s ifconfig.me):8080"
echo "Swagger UI estar√° disponible en la ra√≠z del sitio"
echo ""
echo "Presiona Ctrl+C para detener la aplicaci√≥n"

# Usar el archivo de configuraci√≥n de producci√≥n
export ASPNETCORE_ENVIRONMENT=Production

dotnet run --configuration Release --urls "http://0.0.0.0:8080"
